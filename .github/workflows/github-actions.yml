name: Python CI/CD with Docker Compose

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  POSTGRES_USER: app_user
  POSTGRES_PASSWORD: secretpass
  POSTGRES_DB: app_db

jobs:
  build-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov

  deploy:
    needs: build-test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add known hosts
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SERVER_IP }} $(ssh-keyscan -H ${{ secrets.SERVER_IP }} 2>/dev/null)" >> ~/.ssh/known_hosts

      - name: Deploy to server
        env:
          SERVER_IP: ${{ secrets.SERVER_IP }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
        run: |
          # Создаем временный .env
          cat > .env <<EOL
          POSTGRES_USER=$POSTGRES_USER
          POSTGRES_PASSWORD=$POSTGRES_PASSWORD
          POSTGRES_DB=$POSTGRES_DB
          DB_URL=postgresql://$POSTGRES_USER:$POSTGRES_PASSWORD@postgres:5433/$POSTGRES_DB
          EOL

          # Развертывание
          ssh $SERVER_USER@$SERVER_IP /bin/bash <<EOF
            # Создаем директорию
            mkdir -p ~/portfolio-visualizer
            if [ ! -d ~/portfolio-visualizer/.git ]; then
              git clone https://github.com/Dema-koder/portfolio-visualizer.git ~/portfolio-visualizer
            fi

            cd ~/portfolio-visualizer
            git pull origin main

            # Установка Docker (если требуется)
            if ! command -v docker &> /dev/null; then
              sudo apt-get update
              sudo apt-get install -y docker.io
              sudo systemctl enable docker
              sudo systemctl start docker
            fi

            # Собираем и запускаем образ
            cd ~/portfolio-visualizer
            docker build -t portfolio-visualizer .
            docker stop portfolio-visualizer || true
            docker rm portfolio-visualizer || true
            docker run -p 8000:8000 -e DB_URL=postgresql://app_user:secretpass@172.17.0.1:5433/app_db portfolio-visualizer
          EOF

          rm -f .env